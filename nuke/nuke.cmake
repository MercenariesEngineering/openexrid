
PROJECT(OpenEXRIdForNuke${NDK_VERSION})

FILE(GLOB_RECURSE PROJECT_HDR "${CMAKE_CURRENT_LIST_DIR}/../nuke/*.h")
FILE(GLOB_RECURSE PROJECT_SRC "${CMAKE_CURRENT_LIST_DIR}/../nuke/*.cpp")
FILE(GLOB_RECURSE PROJECT_OSL_HDR "${CMAKE_CURRENT_LIST_DIR}/../nuke/OSL/include/OSL/*.h")
FILE(GLOB_RECURSE PROJECT_OSL_SRC "${CMAKE_CURRENT_LIST_DIR}/../nuke/OSL/*.cpp")

SOURCE_GROUP("Headers" FILES ${PROJECT_HDR})
SOURCE_GROUP("Sources" FILES ${PROJECT_SRC})
SOURCE_GROUP("Osl Headers" FILES ${PROJECT_OSL_HDR})
SOURCE_GROUP("Osl Sources" FILES ${PROJECT_OSL_SRC})
ADD_COMPILE_DEFINITIONS(NUKE_VERSION=Nuke${NDK_VERSION})
IF(WIN32)
	ADD_COMPILE_DEFINITIONS(oslexec_EXPORTS)
	ADD_COMPILE_DEFINITIONS(OSL_STATIC_LIBRARY)
ENDIF(WIN32)

INCLUDE_DIRECTORIES("${NDK_PATH}/include")
INCLUDE_DIRECTORIES("${OPENEXRID_ROOT}/nuke/OSL/include")

ADD_LIBRARY(${PROJECT_NAME} SHARED ${PROJECT_HDR} ${PROJECT_SRC} ${PROJECT_OSL_HDR} ${PROJECT_OSL_SRC})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${OPENIMAGEIO_LIBRARIES} re2 ${OPENEXR_LIBRARIES} ${NDK_LIBRARIES} ${BOOST_LIBRARIES} ${OPENGL_LIBRARIES} ${ZLIB_LIBRARIES})
IF (TARGET IlmBase::Half)
	TARGET_LINK_LIBRARIES(${PROJECT_NAME} IlmBase::Half)
ENDIF ()

IF (UNIX)
	SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")
ENDIF (UNIX)
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES OUTPUT_NAME "DeepOpenEXRId")

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OPENEXRID_ROOT}/build/debug/lib/nuke${NDK_VERSION}
	LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OPENEXRID_ROOT}/build/debug/lib/nuke${NDK_VERSION}
	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OPENEXRID_ROOT}/build/debug/lib/nuke${NDK_VERSION}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPENEXRID_ROOT}/build/relwithdebinfo/lib/nuke${NDK_VERSION}
	LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPENEXRID_ROOT}/build/relwithdebinfo/lib/nuke${NDK_VERSION}
	RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPENEXRID_ROOT}/build/relwithdebinfo/lib/nuke${NDK_VERSION}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OPENEXRID_ROOT}/build/release/lib/nuke${NDK_VERSION}
	LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OPENEXRID_ROOT}/build/release/lib/nuke${NDK_VERSION}
	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OPENEXRID_ROOT}/build/release/lib/nuke${NDK_VERSION}
)


IF (WIN32)
	ADD_CUSTOM_COMMAND(TARGET ${PROJECT_NAME} POST_BUILD
		COMMAND ${CMAKE_COMMAND} -E copy $<TARGET_FILE:${PROJECT_NAME}> $ENV{HOMEDRIVE}$ENV{HOMEPATH}\\.nuke\\ )
ENDIF (WIN32)

SET_VS_FOLDER(Hosts/Nuke/)

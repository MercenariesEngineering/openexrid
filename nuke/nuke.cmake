
PROJECT(OpenEXRIdForNuke${NDK_VERSION})

FILE(GLOB_RECURSE PROJECT_HDR "${CMAKE_CURRENT_LIST_DIR}/../nuke/*.h")
FILE(GLOB_RECURSE PROJECT_SRC "${CMAKE_CURRENT_LIST_DIR}/../nuke/*.cpp")
FILE(GLOB_RECURSE PROJECT_OSL_HDR "${CMAKE_CURRENT_LIST_DIR}/../nuke/OSL/include/OSL/*.h")
FILE(GLOB_RECURSE PROJECT_OSL_SRC "${CMAKE_CURRENT_LIST_DIR}/../nuke/OSL/*.cpp")

SOURCE_GROUP("Headers" FILES ${PROJECT_HDR} ${PROJECT_OSL_HDR})
SOURCE_GROUP("Sources" FILES ${PROJECT_SRC} ${PROJECT_OSL_SRC})
ADD_COMPILE_DEFINITIONS(NUKE_VERSION=Nuke${NDK_VERSION})

INCLUDE_DIRECTORIES("${NDK_PATH}/include")
LINK_DIRECTORIES("${NDK_PATH}/lib")
INCLUDE_DIRECTORIES("${OPENEXRID_ROOT}/nuke/OSL/include")

ADD_LIBRARY(${PROJECT_NAME} SHARED ${PROJECT_HDR} ${PROJECT_SRC} ${PROJECT_OSL_HDR} ${PROJECT_OSL_SRC})

TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${NUKE_PLUGIN_LIBS})

IF (UNIX)
	SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES PREFIX "")
ENDIF (UNIX)
SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES OUTPUT_NAME "DeepOpenEXRId")

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OPENEXRID_ROOT}/build/debug/lib/nuke${NDK_VERSION}
	LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OPENEXRID_ROOT}/build/debug/lib/nuke${NDK_VERSION}
	RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OPENEXRID_ROOT}/build/debug/lib/nuke${NDK_VERSION}
	ARCHIVE_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPENEXRID_ROOT}/build/relwithdebinfo/lib/nuke${NDK_VERSION}
	LIBRARY_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPENEXRID_ROOT}/build/relwithdebinfo/lib/nuke${NDK_VERSION}
	RUNTIME_OUTPUT_DIRECTORY_RELWITHDEBINFO ${OPENEXRID_ROOT}/build/relwithdebinfo/lib/nuke${NDK_VERSION}
	ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OPENEXRID_ROOT}/build/release/lib/nuke${NDK_VERSION}
	LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OPENEXRID_ROOT}/build/release/lib/nuke${NDK_VERSION}
	RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OPENEXRID_ROOT}/build/release/lib/nuke${NDK_VERSION}
)

SET_VS_FOLDER(Hosts/Nuke/)
